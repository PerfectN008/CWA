{"version":3,"sources":["logo.svg","components/Home.js","components/Complaints.js","components/List.js","components/Search.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","state","home","fetch","then","response","json","result","setState","console","log","this","Table","striped","bordered","hover","cases","deaths","recovered","tests","affectedCountries","src","width","Component","Complaints","Name","Email","Complaint","method","headers","body","JSON","stringify","resp","warn","class","for","type","id","onChange","event","target","value","placeholder","rows","onClick","create","List","list","size","Countries","map","item","i","Country","TotalConfirmed","TotalDeaths","TotalRecovered","Search","searchData","key","data","search","country","todayCases","todayDeaths","active","critical","App","className","Navbar","bg","variant","Brand","href","Nav","Link","to","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.46c30e6d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\r\nimport {Table} from 'react-bootstrap';\r\nclass Home extends Component {\r\n    constructor()\r\n    {\r\n        super();\r\n        this.state={\r\n            home:null,\r\n        }\r\n    }\r\n    componentDidMount()\r\n    {\r\n        fetch(\"https://corona.lmao.ninja/v2/all\").then((response)=>{\r\n            response.json().then((result)=>{\r\n                this.setState({home:result})\r\n                console.log()\r\n            })\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <br></br>\r\n                {\r\n                this.state.home? \r\n                <div>\r\n                    <h1>Coronavirus Updates</h1>\r\n                    <h3>Global Live</h3>\r\n                    <Table striped bordered hover>\r\n                        <thead>\r\n                                <tr>\r\n                                <th>Total Confirmed</th>\r\n                                <th>Total Deaths</th>\r\n                                <th>Recovered</th>\r\n                                <th>Tests</th>\r\n                                <th>Countries affected</th>\r\n                                </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {\r\n                            <tr>\r\n                                <td>{this.state.home.cases}</td>\r\n                                <td>{this.state.home.deaths}</td>\r\n                                <td>{this.state.home.recovered}</td>\r\n                                <td>{this.state.home.tests}</td>\r\n                                <td>{this.state.home.affectedCountries}</td>\r\n                            </tr>\r\n                        }\r\n                        </tbody>\r\n                    </Table>\r\n                    <br></br>\r\n                    <h1>There is no place like Home!</h1>\r\n                    <br></br>\r\n                    <img src=\"https://cdn.dribbble.com/users/3467874/screenshots/10784296/stayhome_2x.jpg\" width=\"500px\"></img>\r\n                    <br></br>\r\n                </div>\r\n              :<p>Please Wait...</p>\r\n             }   \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport {Form, Button} from 'react-bootstrap';\r\n\r\nclass Complaints extends Component {\r\n    constructor()\r\n    {\r\n        super();\r\n        this.state={\r\n            Name:null,\r\n            Email:null,\r\n            Complaint:null\r\n        }\r\n    }\r\n    create()\r\n    {\r\n        fetch('http://localhost:3000/complaints',{\r\n            method:\"Post\",\r\n            headers:{\r\n                'Content-Type':'application/json'\r\n            },\r\n            body: JSON.stringify(this.state)\r\n        }).then((result)=>{\r\n            result.json().then((resp)=>{\r\n                console.warn(resp)\r\n            })\r\n        })\r\n    }\r\n    render() {\r\n        \r\n        return (\r\n            <div>\r\n                <br></br>\r\n                <h1>Complaints</h1>\r\n                <br></br>\r\n                <br></br>\r\n                <form>\r\n                <div class=\"form-group\">\r\n                    <label for=\"exampleFormControlInput1\">Email address</label>\r\n                    <input type=\"email\" class=\"form-control\" id=\"exampleFormControlInput1\" onChange={(event)=>{this.setState({Name:event.target.value})}} placeholder=\"name@example.com\"></input>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label for=\"lname\">Name</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"lname\" onChange={(event)=>{this.setState({Email:event.target.value})}}></input>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label for=\"exampleFormControlTextarea1\">Complaint</label>\r\n                    <textarea class=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"6\" onChange={(event)=>{this.setState({Complaint:event.target.value})}}></textarea>\r\n                </div>\r\n                <button type=\"submit\" class=\"btn btn-danger\" onClick={()=>{this.create()}}>Submit</button>\r\n                </form>\r\n                \r\n            </div>\r\n        ); \r\n    }\r\n}\r\n\r\n\r\nexport default Complaints;","import React, { Component } from 'react';\r\nimport {Table} from 'react-bootstrap'\r\nclass List extends Component {\r\n    constructor()\r\n    {\r\n        super();\r\n        this.state={\r\n            list:null,\r\n        }\r\n    }\r\n    componentDidMount()\r\n    {\r\n        fetch(\"https://api.covid19api.com/summary\").then((response)=>{\r\n            response.json().then((result)=>{\r\n                this.setState({list:result})\r\n            })\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <br></br>\r\n                <h1>List of Countries</h1>\r\n                <br></br>\r\n                {\r\n                    this.state.list?\r\n                    <div>\r\n                        <Table striped bordered hover size=\"sm\">\r\n                        <thead>\r\n                                <tr>\r\n                                <th>#</th>\r\n                                <th>Country</th>\r\n                                <th>Total Confirmed</th>\r\n                                <th>Total Deaths</th>\r\n                                <th>Total Recovered</th>\r\n                                </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {\r\n                            this.state.list.Countries.map((item,i)=>\r\n                            <tr>\r\n                                <td>{i+1}</td>\r\n                                <td>{item.Country}</td>\r\n                                <td>{item.TotalConfirmed}</td>\r\n                                <td>{item.TotalDeaths}</td>\r\n                                <td>{item.TotalRecovered}</td>\r\n                            </tr>)\r\n                        }\r\n                        </tbody>\r\n                        </Table>\r\n                    </div>\r\n                    :<p>Please Wait...</p>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default List;","import React, { Component } from 'react';\r\nimport {Table} from 'react-bootstrap';\r\nclass Search extends Component {\r\n    constructor()\r\n    {\r\n        super()\r\n        this.state={\r\n            searchData:null\r\n        }\r\n    }\r\n    search(key)\r\n    {\r\n        fetch(\"https://corona.lmao.ninja/v2/countries/\"+key).then((data)=>{\r\n            data.json().then((resp)=>{\r\n                console.warn(\"resp\",resp)\r\n                this.setState({searchData:resp})\r\n            })\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Search for a Country's live updates</h1>\r\n                <p></p>\r\n                <p></p>\r\n                <p></p>\r\n                <input type=\"text\" onChange={(event)=>this.search(event.target.value)}></input>\r\n                <p></p>\r\n                <p></p>\r\n                <div>\r\n                    {\r\n                        this.state.searchData?\r\n                        <div>\r\n                           \r\n                            <Table striped bordered hover>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>Country</td>\r\n                                        <td>{this.state.searchData.country}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Total Cases</td>\r\n                                        <td>{this.state.searchData.cases}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Latest Cases</td>\r\n                                        <td>{this.state.searchData.todayCases}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Total Deaths</td>\r\n                                        <td>{this.state.searchData.deaths}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Latest Deaths</td>\r\n                                        <td>{this.state.searchData.todayDeaths}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Recovered</td>\r\n                                        <td>{this.state.searchData.recovered}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Active</td>\r\n                                        <td>{this.state.searchData.active}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Critical</td>\r\n                                        <td>{this.state.searchData.critical}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Tests</td>\r\n                                        <td>{this.state.searchData.tests}</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </Table>\r\n                        </div>\r\n                        :\"\"\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Search;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link\n} from 'react-router-dom'\nimport {Navbar, Nav} from 'react-bootstrap'\nimport Home from \"./components/Home\"\nimport Complaints from \"./components/Complaints\"\nimport List from \"./components/List\"\nimport Search from \"./components/Search\"\nfunction App() {\n  return (\n    <div className=\"App\">\n     <Router>\n     <Navbar bg=\"dark\" variant=\"dark\">\n    <Navbar.Brand href=\"#home\">Stay Home & Stay Safe!</Navbar.Brand>\n    <Nav className=\"mr-auto\">\n      <Nav.Link href=\"#home\"><Link to=\"/\">Home</Link></Nav.Link>\n      <Nav.Link href=\"#home\"><Link to=\"/list\">List</Link></Nav.Link>\n      <Nav.Link href=\"#home\"><Link to=\"/search\">Search</Link></Nav.Link>\n      <Nav.Link href=\"#home\"><Link to=\"/complaints\">Complain</Link></Nav.Link>\n    </Nav>\n  </Navbar>\n       \n       <Route exact path=\"/\">\n       <Home />\n       </Route>\n       <Route path=\"/list\">\n       <List />\n       </Route>\n       <Route path=\"/search\">\n       <Search />\n       </Route>\n       <Route path=\"/complaints\">\n       <Complaints />\n       </Route>\n      </Router>\n     \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}